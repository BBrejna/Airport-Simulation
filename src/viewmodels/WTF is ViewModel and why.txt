I used to make Android apps with it and this project pattern worked really well for all the apps

https://developer.android.com/topic/libraries/architecture/viewmodel

ViewModel - an architectural pattern in computer software that facilitates
             the separation of the development of the graphical user interface (GUI)

Models (classes)  <==>   ViewModel (processing all data, holding properties)   <==>  Thread

In the thread there are reference objects of ViewModels

Properties of ViewModel can be observable

My proposition for observable variables/properties in ViewModels: LiveData / MutableLiveData
https://developer.android.com/topic/libraries/architecture/livedata
Exemplary implementation of LiveData property:

    class ExampleViewModel extends ViewModel {
        ...
        private final MutableLiveData<Airplane> airplaneLiveData = new MutableLiveData(new Airplane(...))
        // later:
            airplaneLiveData.setValue(new Airplane(...))
            public LiveData<Airplane> getAirplane() {  return airplaneLiveData  }
        ...
    }

    Thread... {

        adminViewModel.getAirplane().observe(this, airplane -> {

            // update UI

        });

    }

